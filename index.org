#+TITLE: Arkboi's Blog
#+AUTHOR: Arkboi
#+SETUPFILE: style.theme

* Hello World

Writing a blog in org mode is the most emacs i can get, You get to suffer HTML, CSS and JS BS in VSCODE while I
get to enjoy writing notes in "markdown but with serious steroids" and convert it into a site.

** Dark Mode

The site does have a dark mode, it is using the Darksun org theme. (https://gitlab.com/OlMon/org-themes/-/blob/master/src/darksun/darksun.theme)

** What I do here

This site will probably be filled with lots and lots of rants. So have fun!


* Whats Bad About: Hyprland

Hyprland, a Wayland compositor is just simply bad.

There is an alternative with all it's features but minus the drama that comes along with Hyprland.

Have a quick read through this:

https://rentry.co/Hyprland-controversy

as well as Drew's blog about it:

https://drewdevault.com/2023/09/17/Hyprland-toxicity.html

This is all about the Hyprland lead developer vaxry and the Hyprland community.

** Hyprland is slow.

It has performed really, and I mean really bad on my computer, and sometimes gets in this state
where its unusable, you have to reboot

and if a program forces me to reboot, im running it over

#+begin_src bash
sudo pacman -Runs hyprland
#+end_src

** Alternatives

The best alternative to hyprland is:

https://github.com/nferhat/fht-compositor

the fht compositor has all your eye candy features, without any drama, and it runs well.

It's also worth considering:

- Niri (https://github.com/YaLTeR/niri) (The one I use, a scrollable Wayland compositor.)

- River (https://isaacfreund.com/software/river/) (Similar to DWM, Xmonad, etc)

- Sway (https://swaywm.org) (i3 compatible Wayland compositor)


** Conclusion

Do not use Hyprland, if you ever shilled it, make an apology

* What's Bad About: Ubuntu

Ubuntu is a huge mess made by Canonical.

It started out as a nice and unique distro and grew out to be a:

- Pointless
- Slow
- Spyware
- Bloated

** Spyware

Yes, Ubuntu is spyware. Not only does it come with spyware apps that bloat it,
it also stores up everything, stuff that you search etc.

Ubuntu has turned into Microsoft Windows

What else do you expect from a distro made by a corporation haha, (I'm talking about you, RHEL)

** "C sucks"

It's also recently stripped out GNU coreutils and replaced it with uutils written in Rust.
Maybe this is to avoid getting boo'ed by stallman? Or is Rust all what people are into these days?

The problem with this change is that, they just replaced the coreutils, and there are programs that depend
on certain GNU Coreutils specific things that are just not gonna work!

So you really need to think things out before making stupid changes!

** Bloat


Snap. A useless thing that Canonical forces into the Ubuntu uutils/Linux distro.

Snap programs are slow, and snap is pointless

Flatpaks have gotten way better, plus, why would you replace a system package like firefox with
a snap equivalent!??

As I mentioned before, It comes with many bloated apps, that i,

DID NOT ASK FOR.

** Conclusion

Never recommend Ubuntu to anyone, only recommend the font.


* Bash is based


It may come to your surprise that I am NOT a programmer.
I don't know C, see pee pee, python snake, or rusty socks.

What I do know is Linux and I know very well about it.
The only "language" I have ever learned is Bash. If you consider that a language. 

** What's Bash

Bash (Bourne Again Shell) is a shell and it's the default on many many Linux distros.
It can also be used a scripting language, and that's what we are talking about today.

** The cool thing about bash

When you run bash in a terminal you can type in any sort of bash scripting thing and it will work, for example
here is an array in bash:

#+begin_src bash

  list=(
      "orange"
      "apple"
      "banana"
  )

  echo "The second item in the list is ${list[1]}"
#+end_src

This will add an array with three items, then we echo the second item in the list. (this is what the [1] does, [0] would be the first item hence [1]
is the second item.)

** Basic Bash Things

*** Functions

#+begin_src bash

  # Define our function
  my_function(){
      echo "This command is inside a function"
  }

  # Call our function
  my_function
    
#+end_src

it's as simple as that.


*** Variables

#+begin_src bash

  # Define a Variable
  var="foo"

  # Use our variable
  echo "$var 123"
    
#+end_src

this will output it as "foo 123"

*** Redirect Stuff

#+begin_src bash
  # Create a file
  touch ~/file.txt

  # Redirect the output of one command into the file
  echo "Hi!" > ~/file.txt

  # Create another file
  touch ~/file-2.txt

  # Redirect the output of file.txt into file-2.txt
  cat ~/file.txt > ~/file-2.txt

  # Add More stuff to file-2.txt
  echo -e "\nMore stuff!" >> ~/file-2.txt
#+end_src

Let's break this down,

the **touch** command here is used to create a file, then we redirect the output of:

echo "Hi!"

into file.txt with the > symbol.

Then we create another file, we do the same redirection method where the output of a command goes into a file,
in this case the command being *cat ~/file.txt* which will output everything in ~/file.txt

Then to add more stuff we use two (>>) symbols to *add* to the file instead of *override*, with the command being:

*echo -e "\nMore stuff!"*

the -e flag is used so that the \n becomes a new line, so the contents of file.txt would be:

Hi!

More stuff!

** Conclusion


*** Bash is easy.

I think you get the point, it's easy, it's straightforward, and you can use it for a lot of things.
*Bash is based*
